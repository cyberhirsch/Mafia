/* Import the C64 Font (same as before) */
@font-face {
    font-family: 'C64ProMono';
    src: url('fonts/C64_Pro_Mono-STYLE.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}

html, body {
    height: 100%;
    margin: 0;
    padding: 0;
    overflow: hidden; /* Prevent scrollbars if content overflows due to scaling issues */
    background-color: #3C3C3C;
    font-family: 'C64ProMono', 'Courier New', Courier, monospace;
    image-rendering: pixelated;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
}

#scaler-wrapper {
    width: 100vw;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative; /* For absolute positioning of the scaled content if needed */
}

#monitor-frame {
    /* Define the fixed size of your entire game interface in pixels here */
    /* This should be the size you designed it for *before* scaling */
    /* Let's calculate based on previous C64 screen + borders + status/message */

    --char-width: 8px;
    --char-height: 8px;
    --screen-cols: 40;
    --screen-rows: 25;
    --text-scale: 2; /* This is the internal scaling of your font */

    /* Calculate base C64 screen size */
    --c64-screen-base-width: calc(var(--screen-cols) * var(--char-width) * var(--text-scale));
    --c64-screen-base-height: calc(var(--screen-rows) * var(--char-height) * var(--text-scale));

    /* Add padding of .c64-screen (0.5 char height * 2 for top/bottom) */
    --c64-screen-padded-height: calc(var(--c64-screen-base-height) + var(--char-height) * var(--text-scale));
    --c64-screen-padded-width: calc(var(--c64-screen-base-width) + var(--char-width) * var(--text-scale));


    /* Add border of .c64-screen (5px * 2) */
    --c64-screen-bordered-height: calc(var(--c64-screen-padded-height) + 10px);
    --c64-screen-bordered-width: calc(var(--c64-screen-padded-width) + 10px);

    /* Approximate heights for status and message areas (these are rough based on previous CSS) */
    --status-line-height-approx: calc(var(--char-height) * var(--text-scale) * 0.8 * 1.2 + var(--char-height) * var(--text-scale) * 0.2 * 2 + var(--char-height) * var(--text-scale) * 0.3 + 2px); /* font + padding + margin-bottom + border */
    --message-area-height-approx: calc(var(--char-height) * var(--text-scale) * 0.9 * 1.2 * 2 + var(--char-height) * var(--text-scale) * 0.3 * 2 + var(--char-height) * var(--text-scale) * 0.3 + 2px); /* font*2lines + padding + margin-top + border */

    --game-window-total-height: calc(var(--c64-screen-bordered-height) + var(--status-line-height-approx) + var(--message-area-height-approx));
    --game-window-total-width: var(--c64-screen-bordered-width); /* Assuming width is primarily driven by c64-screen */

    /* Monitor frame itself adds padding */
    --monitor-padding: 25px; /* As defined before */

    width: calc(var(--game-window-total-width) + (2 * var(--monitor-padding)));
    height: calc(var(--game-window-total-height) + (2 * var(--monitor-padding)));

    background-color: #2A2A2A;
    padding: var(--monitor-padding);
    border-radius: 10px;
    box-shadow: 0 0 20px rgba(0,0,0,0.7), inset 0 0 10px rgba(0,0,0,0.5);

    /* Scaling will be applied by JavaScript via transform */
    transform-origin: center center; /* Scale from the center */
    /* transition: transform 0.1s ease-out; /* Optional: smooth out scaling */
}


#game-window {
    /* No fixed width/height here anymore, it's determined by its content,
       which is then scaled by #monitor-frame via JS */
    border: 2px solid #111;
    background-color: #000000;
    box-shadow: inset 0 0 15px rgba(0,0,0,0.6);
    display: flex; /* Added to help structure inner elements */
    flex-direction: column; /* Stack status, screen, message vertically */
}

/* --- The rest of your styles for #status-line, .c64-screen, etc., remain largely the same --- */
/* Ensure they use the CSS variables for sizing where appropriate. */

#status-line {
    font-family: 'C64ProMono', 'Courier New', Courier, monospace;
    font-size: calc(var(--char-height) * var(--text-scale) * 0.8);
    line-height: 1.2;
    padding: calc(var(--char-height) * var(--text-scale) * 0.2) calc(var(--char-width) * var(--text-scale) * 0.5);
    margin-bottom: calc(var(--char-height) * var(--text-scale) * 0.3);
    /* min-height removed as it's part of the flex layout now */
    text-transform: uppercase;
    background-color: #4A4A7A;
    color: #FFFF8B;
    border-bottom: 2px solid #222250;
    flex-shrink: 0; /* Prevent status line from shrinking */
}

.c64-screen {
    width: var(--c64-screen-bordered-width); /* Use calculated bordered width */
    height: var(--c64-screen-bordered-height); /* Use calculated bordered height */
    padding: calc(var(--char-height) * var(--text-scale) * 0.5);
    box-sizing: border-box;
    font-size: calc(var(--char-height) * var(--text-scale));
    line-height: 1;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    text-transform: uppercase;
    image-rendering: pixelated;
    flex-shrink: 0; /* Prevent c64-screen from shrinking if #game-window is flex container */
}


/* C64 Color Palette (same as before) */
.yellow-bg { background-color: #FEFEC1; color: #504F00; border: 5px solid #8A5442; }
.pink-bg   { background-color: #F7A898; color: #542C2C; border: 5px solid #8A5442; }
.blue-bg   { background-color: #A4E3FF; color: #003A54; border: 5px solid #4A4A7A; }
.purple-bg { background-color: #D0B0FF; color: #400080; border: 5px solid #6020A0; }
.brown-bg  { background-color: #DDC09C; color: #4E2F00; border: 5px solid #8A5442; }
.green-bg  { background-color: #BEEBAD; color: #2A5328; border: 5px solid #507B4E; }
.orange-bg { background-color: #FFD1A9; color: #6B3400; border: 5px solid #A05000; }
.black-bg  { background-color: #000000; color: #FFFF00; border: 5px solid #444444; }
.red-bg    { background-color: #B52727; color: #FFFFFF; border: 5px solid #7F0000; }
.white-text{ color: #FFFFFF; }

#main-text-area p,
#options-list li {
    margin: 0;
    height: calc(var(--char-height) * var(--text-scale));
    white-space: pre;
    overflow: hidden;
    max-width: calc(var(--screen-cols) * var(--char-width) * var(--text-scale));
}

#options-list {
    list-style-type: none;
    padding-left: 0;
    margin-top: calc(var(--char-height) * var(--text-scale) * 0.5);
    margin-bottom: calc(var(--char-height) * var(--text-scale) * 0.5);
    flex-grow: 1; /* Allow it to take available space in .c64-screen */
}

.input-area {
    margin-top: auto; /* Push to bottom of .c64-screen */
    height: calc(var(--char-height) * var(--text-scale));
    display: flex;
    align-items: center;
    flex-shrink: 0; /* Prevent from shrinking */
}

#prompt-text { margin-right: 0; }

#cursor-simulation {
    display: inline-block;
    animation: blink 1s step-start infinite;
    width: calc(var(--char-width) * var(--text-scale));
    height: calc(var(--char-height) * var(--text-scale));
    line-height: 1;
}

@keyframes blink { 50% { opacity: 0; } }

#player-input-field {
    background-color: transparent;
    border: none;
    color: inherit;
    font-family: inherit;
    font-size: inherit;
    line-height: 1;
    padding: 0;
    margin: 0;
    width: calc(var(--char-width) * var(--text-scale) * 10); /* Increased width for easier typing */
    height: calc(var(--char-height) * var(--text-scale));
    outline: none;
    caret-color: transparent;
    text-transform: uppercase;
}

#message-area {
    font-family: 'C64ProMono', 'Courier New', Courier, monospace;
    font-size: calc(var(--char-height) * var(--text-scale) * 0.9);
    line-height: 1.2;
    margin-top: calc(var(--char-height) * var(--text-scale) * 0.3);
    padding: calc(var(--char-height) * var(--text-scale) * 0.3);
    /* min-height removed */
    color: #FF8C00;
    background-color: #333355;
    border-top: 2px solid #111133;
    text-transform: uppercase;
    flex-shrink: 0; /* Prevent message area from shrinking */
    height: calc(var(--char-height) * var(--text-scale) * 0.9 * 1.2 * 2 + var(--char-height) * var(--text-scale) * 0.3 * 2 + 2px); /* Fixed height for 2 lines */
}

hr {
    border: none;
    border-top: calc(var(--char-height) * var(--text-scale) * 0.1) solid currentColor;
    opacity: 0.6;
    margin: calc(var(--char-height) * var(--text-scale) * 0.2) 0;
}